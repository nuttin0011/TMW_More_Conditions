-- Many Function Version 9.0.5/69
-- Set Priority to 1
if not IROVar then IROVar={}end;IROVar.Icon={}function IROVar.IsIconShow(a)return a and a.attributes.shown and not a:Update()and a.attributes.realAlpha>0 end;local GetTime=GetTime;local GetSpellCooldown=GetSpellCooldown;IROVar.playerGUID=UnitGUID("player")IROVar.DebugMode=false;IROVar.InterruptSpell=nil;IROVar.SkillCheckDPSRange=nil;IROVar.InstanceName=GetInstanceInfo()IROVar.activeConduits={}IROVar.EditKeyMacroForAutoTarget=50;IROVar.PLAYER_TARGET_CHANGED_Time=GetTime()IROVar.CCDebuff={}for b,c in ipairs(TMW.BE.debuffs.CrowdControl)do IROVar.CCDebuff[c]=true end;function IROVar.IsUnitCCed(d)if not UnitExists(d)then return false end;local e=false;for f=1,40 do local g,_,_,_,_,_,_,_,_,h=UnitAura(d,f,"HARMFUL")if g then if IROVar.CCDebuff[h]or IROVar.CCDebuff[g]then e=true;break end else break end end;return e end;function IROVar.CounterSetUpdate(i)for b,c in pairs(i)do TMW_ST:UpdateCounter(b,c)end end;function IROVar.CalculateHaste()IROVar.Haste=UnitSpellHaste("player")IROVar.HasteFactor=100/(100+IROVar.Haste)IROVar.CastTime2sec=2*IROVar.HasteFactor;IROVar.CastTime1_5sec=1.5*IROVar.HasteFactor;IROVar.CastTime6sec=6*IROVar.HasteFactor;IROVar.CastTime0_5sec=0.5*IROVar.HasteFactor end;IROVar.CalculateHaste()C_Timer.After(2,IROVar.CalculateHaste)if not IROSpecID then IROSpecID=GetSpecializationInfo(GetSpecialization())end;IROInterruptTier={}for b,c in pairs(IROUsedSkillControl.ClassType)do IROInterruptTier[b]=c end;IROVar.fhaste=CreateFrame("Frame")IROVar.fhaste:RegisterEvent("UNIT_SPELL_HASTE")IROVar.fhaste:SetScript("OnEvent",function(self,j,k)if j=="UNIT_SPELL_HASTE"and k=="player"then IROVar.CalculateHaste()end end)function IROVar.Debug()IROVar.DebugMode=not IROVar.DebugMode;print("IROVar.DebugMode : "..(IROVar.DebugMode and"On"or"Off"))end;function IROVar:fspecOnEvent(j)if IROVar.DebugMode then print("Event : "..(j~=nil and j or"nil"))end;IROVar.UpdateVar()C_Timer.After(5,IROVar.UpdateVar)end;IROVar.fspec=CreateFrame("Frame")IROVar.fspec:RegisterEvent("PLAYER_SPECIALIZATION_CHANGED")IROVar.fspec:RegisterEvent("ZONE_CHANGED_NEW_AREA")IROVar.fspec:SetScript("OnEvent",IROVar.fspecOnEvent)function IROVar.UpdateVar()IROVar.InstanceName=GetInstanceInfo()local l=GetSpecializationInfo(GetSpecialization())if IROVar.DebugMode then if IROSpecID~=l and l~=nil then print("old Spec :"..(IROSpecID~=nil and IROSpecID or"nil"))print("new Spec :"..(l~=nil and l or"nil"))end end;IROSpecID=l or IROSpecID;if IROInterruptTier[IROSpecID]then IROVar.InterruptSpell=IROInterruptTier[IROSpecID][2]IROVar.SkillCheckDPSRange=IROInterruptTier[IROSpecID][3]else IROVar.InterruptSpell=nil;IROVar.SkillCheckDPSRange=nil end end;IROVar.UpdateVar()C_Timer.After(5,IROVar.UpdateVar)IROVar.CheckDPSRange=function(m)if IROVar.SkillCheckDPSRange==nil then return true end;m=m or"target"return IsSpellInRange(IROVar.SkillCheckDPSRange,m)==1 end;IROVar.ERO_Old_Val={Timer=0,Old_Val={},Check=function(n,o)o=o or""return IROVar.ERO_Old_Val.Timer==IROVar.TickCount005 and IROVar.ERO_Old_Val.Old_Val[n]and IROVar.ERO_Old_Val.Old_Val[n][o]and IROVar.ERO_Old_Val.Old_Val[n][o]or nil end,Update=function(n,o,p)o=o or""local q=IROVar.TickCount005;if IROVar.ERO_Old_Val.Timer<q then IROVar.ERO_Old_Val.Timer=q;IROVar.ERO_Old_Val.Old_Val={}end;if not IROVar.ERO_Old_Val.Old_Val[n]then IROVar.ERO_Old_Val.Old_Val[n]={}end;IROVar.ERO_Old_Val.Old_Val[n][o]=p end}local r={[2]=37727,[3]=42732,[4]=129055,[5]=8149,[7]=61323,[8]=34368,[10]=32321,[15]=33069,[20]=10645,[25]=24268,[30]=835,[35]=24269,[38]=140786,[40]=28767,[45]=23836,[50]=116139,[55]=74637,[60]=32825,[70]=41265,[80]=35278,[90]=133925,[100]=33119,[150]=46954,[200]=75208}local s={}for f=1,200 do if r[f]then table.insert(s,f)end end;IROVar.ItemNameToCheck8="item:34368"function IROVar.Range(d)for f=1,#s do if IsItemInRange("item:"..r[s[f]],d)then return s[f-1]or 0 end end;return 300 end;function IROEnemyCountInRange(t)t=t or 8;local u=IROVar.ERO_Old_Val.Check("IROEnemyCountInRange",t)if u then return u end;if t<2 then t=2 end;while r[t]==nil do t=t-1 end;local v="item:"..r[t]local w;local x=0;for f=1,30 do w='nameplate'..f;if UnitExists(w)and UnitCanAttack("player",w)then if IsItemInRange(v,w)and(UnitAffectingCombat(w)or t<=8 or IsItemInRange(IROVar.ItemNameToCheck8,w))then x=x+1 end end;if x>=8 then break end end;IROVar.ERO_Old_Val.Update("IROEnemyCountInRange",t,x)return x end;function PercentCastbar2(y,z,d,A,B)y=y or 0.5;if z==nil then z=true end;B=B or 2000;A=A or 200;d=d or"target"local _,_,_,C,D,_,_,E=UnitCastingInfo(d)local F=false;local G;local H;local I;if C~=nil and not(E and z)then G=D-C;H=GetTime()*1000-C;if G-H>=A and G-H<=B then I=H/G;F=I>=y end;return F end;local _,_,_,J,K,_,L=UnitChannelInfo(d)if J~=nil and not(L and z)then G=K-J;H=GetTime()*1000-J;if H>=A and H<=G-A then F=true end end;return F end;function GCDActiveLessThan(M)M=M or 0.2;local N,O=GetSpellCooldown(TMW.GCDSpell)return N+O-GetTime()<M end;function SumPartyHP()local P=IROVar.ERO_Old_Val.Check("SumPartyHP","")if P then return P end;local Q=0;if IsInRaid()then local R=GetNumGroupMembers()if R==0 then R=1 end;for f=1,R do Q=Q+UnitHealth("raid"..f)end elseif IsInGroup()then Q=UnitHealth("player")local R=GetNumGroupMembers()for f=1,R-1 do Q=Q+UnitHealth("party"..f)end else Q=UnitHealth("player")end;IROVar.ERO_Old_Val.Update("SumPartyHP","",Q)return Q end;IROVar.ignoreName={["Spiteful Shade"]=true,["Slithering Ooze"]=true}function SumHPMobinCombat()local P=IROVar.ERO_Old_Val.Check("SumHPMobinCombat","")if P then return P end;local S=0;local w;for T=1,30 do w='nameplate'..T;if UnitExists(w)and not IROVar.ignoreName[UnitName(w)]and UnitCanAttack("player",w)and(UnitAffectingCombat(w)or IsItemInRange(IROVar.ItemNameToCheck8,w))then S=S+UnitHealth(w)end end;IROVar.ERO_Old_Val.Update("SumHPMobinCombat","",S)return S end;function SumHPMobin8yd()local S=0;local w;for T=1,30 do w='nameplate'..T;if UnitExists(w)and CheckInteractDistance(w,2)and UnitCanAttack("player",w)then S=S+UnitHealth(w)end end;return S end;function IROTargetVVHP(U,d)d=d or"target"U=U or 2;local V=SumPartyHP()local W=UnitHealth(d)return U*V<W end;IROVar.IROEnemyGroupVVHPOldVal={}IROVar.IROEnemyGroupVVHPRun=false;function IROEnemyGroupVVHP(U)IROVar.IROEnemyGroupVVHPRun=true;U=U or 3;if IROVar.IROEnemyGroupVVHPOldVal[U]then IROVar.IROEnemyGroupVVHPRun=false;return IROVar.IROEnemyGroupVVHPOldVal[U]end;local V=SumPartyHP()local X=SumHPMobinCombat()local Y=U*V<X;IROVar.IROEnemyGroupVVHPOldVal[U]=Y;IROVar.IROEnemyGroupVVHPRun=false;return Y end;C_Timer.NewTicker(0.5,function()if not IROVar.IROEnemyGroupVVHPRun then IROVar.IROEnemyGroupVVHPOldVal={}end end)local Z={[259]=true,[260]=true,[261]=true,[269]=true,[103]=true}IROVar.GCDCDTimeOldHaste=0;IROVar.GCDCDTimeOldGCD=0;function GCDCDTime()local u=IROVar.ERO_Old_Val.Check("GCDCDTime","")if u then return u end;local a0=TMW.GCD;if a0==0 then if not IROSpecID then IROSpecID=GetSpecializationInfo(GetSpecialization())end;if Z[IROSpecID]then a0=1 else if IROVar.GCDCDTimeOldHaste~=IROVar.Haste then a0=1.5*100/(100+IROVar.Haste)IROVar.GCDCDTimeOldHaste=IROVar.Haste;IROVar.GCDCDTimeOldGCD=a0 else a0=IROVar.GCDCDTimeOldGCD end end end;IROVar.ERO_Old_Val.Update("GCDCDTime","",a0)return a0 end;IROVar.temp_allDeBuffByMe={[1]=0,[2]={}}function IROVar.allDeBuffByMe(d)local a1={}local a2=UnitGUID(d)if not a2 then return a1 end;local a3=GetTime()if IROVar.temp_allDeBuffByMe[1]==a3 and IROVar.temp_allDeBuffByMe[2][a2]then return IROVar.temp_allDeBuffByMe[2][a2]end;if IROVar.temp_allDeBuffByMe[1]<a3 then IROVar.temp_allDeBuffByMe[1]=a3;IROVar.temp_allDeBuffByMe[2]={}end;local a4,a5;for f=1,400 do a4,_,_,_,_,a5=UnitAura(d,f,"PLAYER|HARMFUL")if a4 then a1[a4]=a5-GetTime()else break end end;IROVar.temp_allDeBuffByMe[2][a2]=a1;return a1 end;IROVar.temp_allBuffByMe={[1]=0,[2]={}}function IROVar.allBuffByMe(d,a6)local a7={}local a2=UnitGUID(d)if not a2 then return a7 end;local a3=GetTime()if IROVar.temp_allBuffByMe[1]==a3 and IROVar.temp_allBuffByMe[2][a2]then return IROVar.temp_allBuffByMe[2][a2]end;if IROVar.temp_allBuffByMe[1]<a3 then IROVar.temp_allBuffByMe[1]=a3;IROVar.temp_allBuffByMe[2]={}end;local a8,a5;if a6 then for f=1,400 do a8,_,_,_,_,a5=UnitAura(d,f,"PLAYER|HELPFUL")if a8 then a7[string.lower(a8)]=a5-GetTime()else break end end else for f=1,400 do a8,_,_,_,_,a5=UnitAura(d,f,"PLAYER|HELPFUL")if a8 then a7[a8]=a5-GetTime()else break end end end;IROVar.temp_allBuffByMe[2][a2]=a7;return a7 end;function IROVar.IconSweepCompair(a,a9,aa)if not a then return true end;if aa<=0 and a.Modules.IconModule_CooldownSweep.start==0 then return true end;local ab=a.Modules.IconModule_CooldownSweep.start+a.Modules.IconModule_CooldownSweep.duration;local ac=ab-a9;local ad=ab-aa;local ae=GetTime()return ae>ac and ae<ad end;function IROVar.DetermineActiveCovenantAndSoulbindAndConduits()local af=C_Covenants.GetActiveCovenantID()if not af or af==0 then return nil end;local ag=C_Covenants.GetCovenantData(af)if not ag then return nil end;local ah=ag.name;local ai=C_Soulbinds.GetActiveSoulbindID()if not ai or ai==0 then return nil end;local aj=C_Soulbinds.GetSoulbindData(ai)if not aj then return nil end;local ak=aj["ID"]local al=aj["name"]local am=aj["description"]local an=aj["tree"]local ao=an["nodes"]local ap={}ap.covenantName=ah;ap.soulbindName=al;ap.conduits={}for _,aq in pairs(ao)do local ar=aq["ID"]local as=aq.row;local at=aq.column;local au=aq.spellID;local av=aq.conduitID;local aw=aq.conduitRank;local ax=aq.state;local ay=aq.conduitType;if ax==3 then local az;if au~=0 then az=GetSpellInfo(au)elseif av~=0 then local aA=C_Soulbinds.GetConduitSpellID(av,aw)au=aA;az=GetSpellInfo(aA)else au=nil;az=nil end;if au then ap.conduits[#ap.conduits+1]={spellID=au,spellName=az}ap[au]=true;ap[az]=true end end end;return ap end;IROVar.justCheckActiveConduits=0;IROVar.fconduitOnEvent=function()local aB=GetTime()if aB<=IROVar.justCheckActiveConduits then return end;IROVar.justCheckActiveConduits=aB+0.4;C_Timer.After(0.5,function()IROVar.activeConduits=IROVar.DetermineActiveCovenantAndSoulbindAndConduits()if not IROVar.activeConduits then IROVar.activeConduits={}end end)end;IROVar.fconduit=CreateFrame("Frame")IROVar.fconduit:RegisterEvent("COVENANT_CALLINGS_UPDATED")IROVar.fconduit:RegisterEvent("COVENANT_CHOSEN")IROVar.fconduit:RegisterEvent("SOULBIND_ACTIVATED")IROVar.fconduit:RegisterEvent("SOULBIND_PATH_CHANGED")IROVar.fconduit:RegisterEvent("SOULBIND_NODE_UPDATED")IROVar.fconduit:RegisterEvent("GARRISON_UPDATE")IROVar.fconduit:SetScript("OnEvent",IROVar.fconduitOnEvent)C_Timer.After(1,IROVar.fconduitOnEvent)IROVar.incombatCallBackRun={}IROVar.outcombatCallBackRun={}function IROVar.RegisterIncombatCallBackRun(g,aC)IROVar.incombatCallBackRun[g]=aC end;function IROVar.RegisterOutcombatCallBackRun(g,aC)IROVar.outcombatCallBackRun[g]=aC end;function IROVar.UnRegisterOutcombatCallBackRun(g)IROVar.outcombatCallBackRun[g]=nil end;function IROVar.UnRegisterIncombatCallBackRun(g)IROVar.incombatCallBackRun[g]=nil end;IROVar.incombat=UnitAffectingCombat("player")IROVar.incombatFrame=CreateFrame("Frame")IROVar.incombatFrame:RegisterEvent("PLAYER_REGEN_ENABLED")IROVar.incombatFrame:RegisterEvent("PLAYER_REGEN_DISABLED")IROVar.incombatFrame:SetScript("OnEvent",function(self,j)IROVar.incombat=j=="PLAYER_REGEN_DISABLED"if j=="PLAYER_REGEN_DISABLED"then for b,c in pairs(IROVar.incombatCallBackRun)do if c then c()end end else for b,c in pairs(IROVar.outcombatCallBackRun)do if c then c()end end end end)IROVar.COMBAT_LOG_EVENT_UNFILTERED_CALLBACK={}function IROVar.Register_COMBAT_LOG_EVENT_UNFILTERED_CALLBACK(g,aC)IROVar.COMBAT_LOG_EVENT_UNFILTERED_CALLBACK[g]=aC end;function IROVar.UnRegister_COMBAT_LOG_EVENT_UNFILTERED_CALLBACK(g)IROVar.COMBAT_LOG_EVENT_UNFILTERED_CALLBACK[g]=nil end;function IROVar.COMBAT_LOG_EVENT_UNFILTERED_scrip(...)for b,c in pairs(IROVar.COMBAT_LOG_EVENT_UNFILTERED_CALLBACK)do if c then c(...)end end end;IROVar.COMBAT_LOG_EVENT_UNFILTERED_frame=CreateFrame("Frame")IROVar.COMBAT_LOG_EVENT_UNFILTERED_frame:RegisterEvent("COMBAT_LOG_EVENT_UNFILTERED")IROVar.COMBAT_LOG_EVENT_UNFILTERED_frame:SetScript("OnEvent",function(self,j,...)IROVar.COMBAT_LOG_EVENT_UNFILTERED_scrip(CombatLogGetCurrentEventInfo())end)IROVar.SPELL_UPDATE_COOLDOWN_CALLBACK={}function IROVar.SPELL_UPDATE_COOLDOWN_scrip()local aD,aE=GetSpellCooldown(TMW.GCDSpell)local aF=0;if aD then aF=aD+aE end;for b,c in pairs(IROVar.SPELL_UPDATE_COOLDOWN_CALLBACK)do if c then c(aF)end end end;IROVar.SPELL_UPDATE_COOLDOWN_count=0;function IROVar.Register_SPELL_UPDATE_COOLDOWN_scrip_CALLBACK(g,aC)IROVar.SPELL_UPDATE_COOLDOWN_CALLBACK[g]=aC end;function IROVar.UnRegister_SPELL_UPDATE_COOLDOWN_scrip_CALLBACK(g)IROVar.SPELL_UPDATE_COOLDOWN_CALLBACK[g]=nil end;IROVar.SPELL_UPDATE_COOLDOWN_frame=CreateFrame("Frame")IROVar.SPELL_UPDATE_COOLDOWN_frame:RegisterEvent("SPELL_UPDATE_COOLDOWN")IROVar.SPELL_UPDATE_COOLDOWN_frame:RegisterEvent("SPELL_UPDATE_USABLE")IROVar.SPELL_UPDATE_COOLDOWN_frame:SetScript("OnEvent",function(self,j,...)IROVar.SPELL_UPDATE_COOLDOWN_count=IROVar.SPELL_UPDATE_COOLDOWN_count+1;IROVar.SPELL_UPDATE_COOLDOWN_scrip()end)IROVar.TickCount005=0;IROVar.TickCount005_Handle=C_Timer.NewTicker(0.05,function()IROVar.TickCount005=IROVar.TickCount005+1 end)IROVar.CastBar={}IROVar.CastBar.Casting=nil;IROVar.CastBar.Channeling=nil;IROVar.CastBar.Calculated={}IROVar.CastBar.Spell=nil;IROVar.CastBar.SpellId=nil;IROVar.CastBar.CantKick=false;function IROVar.CastBar.CheckCasting()local aG={UnitCastingInfo("target")}if aG[1]then IROVar.CastBar.Casting=aG else IROVar.CastBar.Casting=nil end end;function IROVar.CastBar.CheckChanneling()local aG={UnitChannelInfo("target")}if aG[1]then IROVar.CastBar.Channeling=aG else IROVar.CastBar.Channeling=nil end end;function IROVar.CastBar.ResetKick()IROVar.CastBar.CantKick=false;IROVar.CastBar.Spell=nil;IROVar.CastBar.SpellId=nil;IROVar.CastBar.Calculated={}end;function IROVar.CastBar.CheckSpellInfo()local E=false;local aH=nil;local aI=nil;if IROVar.CastBar.Casting then E=IROVar.CastBar.Casting[8]aH=IROVar.CastBar.Casting[1]aI=IROVar.CastBar.Casting[9]elseif IROVar.CastBar.Channeling then E=IROVar.CastBar.Channeling[7]aH=IROVar.CastBar.Channeling[1]aI=IROVar.CastBar.Channeling[8]end;IROVar.CastBar.CantKick=E;IROVar.CastBar.Spell=aH;IROVar.CastBar.SpellId=aI end;function IROVar.CastBar.CalculateInterruptTimer(aJ)local aK=0.2;aJ=aJ or 0.6;local aL=0;local aM=0;if IROVar.CastBar.Casting then local aN=IROVar.CastBar.Casting[4]/1000;local aO=IROVar.CastBar.Casting[5]/1000;local aP=aO-aN;local aQ=aP*aJ;aL=aQ+aN;aM=aO-aK elseif IROVar.CastBar.Channeling then local aN=IROVar.CastBar.Channeling[4]/1000;local aO=IROVar.CastBar.Channeling[5]/1000;local aP=aO-aN;if aP>=1 then aL=aN+0.8;aM=aO-aK end end;IROVar.CastBar.Calculated[aJ]={aL,aM}end;IROVar.TargetChangeCount=0;IROVar.TargetName=UnitName("target")IROVar.TargetGUID=UnitGUID("target")IROVar.TargetLV=UnitLevel("target")function IROVar.CastBar.CheckAll()IROVar.CastBar.CheckCasting()IROVar.CastBar.CheckChanneling()IROVar.CastBar.ResetKick()IROVar.CastBar.CheckSpellInfo()end;IROVar.CastBar.CastFrame=CreateFrame("Frame")IROVar.CastBar.CastFrame:RegisterEvent("UNIT_SPELLCAST_START")IROVar.CastBar.CastFrame:RegisterEvent("UNIT_SPELLCAST_CHANNEL_START")IROVar.CastBar.CastFrame:RegisterEvent("PLAYER_TARGET_CHANGED")IROVar.CastBar.CastFrame:SetScript("OnEvent",function(self,j,aR,...)if j=="UNIT_SPELLCAST_START"and aR=="target"then IROVar.CastBar.Channeling=nil;IROVar.CastBar.CheckCasting()IROVar.CastBar.ResetKick()IROVar.CastBar.CheckSpellInfo()elseif j=="UNIT_SPELLCAST_CHANNEL_START"and aR=="target"then IROVar.CastBar.Casting=nil;IROVar.CastBar.CheckChanneling()IROVar.CastBar.ResetKick()IROVar.CastBar.CheckSpellInfo()elseif j=="PLAYER_TARGET_CHANGED"then IROVar.PLAYER_TARGET_CHANGED_Time=GetTime()IROVar.TargetChangeCount=IROVar.TargetChangeCount+1;IROVar.TargetName=UnitName("target")IROVar.TargetGUID=UnitGUID("target")IROVar.TargetLV=UnitLevel("target")IROVar.CastBar.CheckAll()end end)C_Timer.NewTicker(0.3,IROVar.CastBar.CheckAll)IROVar.CastBar.CastFrame2=CreateFrame("Frame")IROVar.CastBar.CastFrame2:RegisterEvent("UNIT_SPELLCAST_FAILED_QUIET")IROVar.CastBar.CastFrame2:RegisterEvent("UNIT_SPELLCAST_CHANNEL_STOP")IROVar.CastBar.CastFrame2:RegisterEvent("UNIT_SPELLCAST_STOP")IROVar.CastBar.CastFrame2:SetScript("OnEvent",function(self,j,aR,...)if aR=="target"then IROVar.CastBar.Casting=nil;IROVar.CastBar.Channeling=nil;IROVar.CastBar.ResetKick()end end)function IROVar.TargetCastBar(aS,aT,aU)if aU and aU~=IROVar.CastBar.SpellId and aU~=IROVar.CastBar.Spell then return false end;aS=aS or 0.6;if not IROVar.CastBar.Calculated[aS]then IROVar.CastBar.CalculateInterruptTimer(aS)end;local aV=IROVar.CastBar.Calculated[aS][1]local aW=IROVar.CastBar.Calculated[aS][2]if not aT and IROVar.CastBar.CantKick then return false end;local aX=GetTime()return aX>=aV and aX<=aW end;function IROVar.CompareTable(aY,aZ)local function a_(b0,b1)if not b0 or not b1 then return false end;local b2=true;for b,c in pairs(b0)do if type(c)=="table"then b2=IROVar.CompareTable(c,b1[b])if not b2 then break end elseif b2 and c~=b1[b]then b2=false;break end end;return b2 end;local b3=a_(aY,aZ)if b3 then b3=a_(aZ,aY)end;return b3 end;IROInterruptTier.CDEnd=0;IROVar.Register_SPELL_UPDATE_COOLDOWN_scrip_CALLBACK("IsMyInterruptSpellReady",function(b4)local aD,aE=GetSpellCooldown(IROVar.InterruptSpell)if aD then IROInterruptTier.CDEnd=aD+aE else IROInterruptTier.CDEnd=0 end end)function IsMyInterruptSpellReady()if not IROVar.InterruptSpell then return false end;return IROInterruptTier.CDEnd<=GetTime()end;local b5={["MAGE"]=true,["SHAMAN"]=true,["DRUID"]=true}IROVar.decurseInGroup=0;function IROVar.DecurseCheck()local function b6(b7)local _,b8=UnitClass(b7)return b5[b8]end;local b9=0;if IsInRaid()then for f=1,40 do local R="raid"..f;if UnitExists(R)and b6(R)then b9=b9+1 end end elseif IsInGroup()then for f=1,4 do local R="party"..f;if UnitExists(R)and b6(R)then b9=b9+1 end end;if b6("player")then b9=b9+1 end else if b6("player")then b9=b9+1 end end;IROVar.decurseInGroup=b9 end;IROVar.IsDecurseF=CreateFrame("Frame")IROVar.IsDecurseF:RegisterEvent("GROUP_ROSTER_UPDATE")IROVar.IsDecurseF:SetScript("OnEvent",function()IROVar.DecurseCheck()end)C_Timer.NewTicker(6,IROVar.DecurseCheck,10)function IROVar.DecurseInGroup()return IROVar.decurseInGroup end;function IROVar.UnitCount(R)return IROVar.AutoTarget and IROVar.AutoTarget.UnitCount[R]or 0 end;IROVar.KickPressed=false;function IROVar.KickPress()IROVar.KickPressed=true;C_Timer.After(0.4,function()IROVar.KickPressed=false end)end