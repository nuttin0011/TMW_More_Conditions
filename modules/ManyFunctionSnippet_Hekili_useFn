-- Many Function Version Hekili addon 10.0.5/13
-- Set Priority to 7

-- function IROVar.Hekili.GetKeyBind()
-- counter "hekilikey" as below
-- counter "hekilicdstatus" 0 = off , 1 = on
-- "hekilidefstatus" 0 = off , 1 = on
-- "hekilimodestatus" 0 = single , 1 = auto , 2 = aoe
-- function IROVar.Hekili.CheckNextSkill(s1,counterName)
    -- if Skill 2 ~= S1 then Set counterName to 1 then 2 sec set back to 0
    -- note s1 = Hikili skill format
--function Hekili.State.CheckDragonfireBombDispenser=CheckDragonfireBombDispenser
local playerName = IROVar.playerName
local realmName = IROVar.realmName
if not TellMeWhenDB.ERODPSHekiliOptions then
    TellMeWhenDB.ERODPSHekiliOptions={}
end
if not TellMeWhenDB.ERODPSHekiliOptions[realmName] then
    TellMeWhenDB.ERODPSHekiliOptions[realmName]={}
end
if not TellMeWhenDB.ERODPSHekiliOptions[realmName][playerName] then
    TellMeWhenDB.ERODPSHekiliOptions[realmName][playerName]={}
end

local usedKey={
    [""]=0,
    ["1"]=1,
    ["2"]=2,
    ["3"]=3,
    ["4"]=4,
    ["5"]=5,
    ["6"]=6,
    ["7"]=7,
    ["8"]=8,
    ["9"]=9,
    ["0"]=10,
    ["-"]=11,
    ["="]=12,
    ["F1"]=21,
    ["F2"]=22,
    ["F3"]=23,
    ["F4"]=24,
    ["F5"]=25,
    ["F6"]=26,
    ["F7"]=27,
    ["F8"]=28,
    ["F9"]=29,
    ["F10"]=30,
    ["F11"]=31,
    ["F12"]=32,

--    ["A"]=65,
--    ["B"]=66,
--    ["C"]=67,

}

local CounterToKey={
    ["a"]="1",
    ["b"]="2",
    ["c"]="3",
    ["d"]="4",
    ["e"]="5",
    ["f"]="6",
    ["g"]="7",
    ["h"]="8",
    ["i"]="9",
    ["j"]="0",
    ["k"]="-",
    ["l"]="=",
    ["m"]="F1",
    ["n"]="F2",
    ["o"]="F3",
    ["p"]="F4",
    ["q"]="F5",
    ["r"]="F6",
    ["s"]="F7",
    ["t"]="F8",
    ["u"]="F9",
    ["v"]="F10",
    ["w"]="F11",
    ["x"]="F12",
}

local KeyEnable={}

for k,v in pairs(CounterToKey) do
    TMW_ST:UpdateCounter(k,1)
    KeyEnable[v]=true
end

if not IROVar then IROVar={} end
if not IROVar.Hekili then IROVar.Hekili={} end

local Hekili=Hekili
local COUNTERS=TMW.COUNTERS
local TMW=TMW

if Hekili then
    Hekili.State.COUNTERS=COUNTERS
else
    C_Timer.After(5,function() Hekili.State.COUNTERS=COUNTERS end)
end


--PLAYER_STARTED_MOVING  PLAYER_STOPPED_MOVING
local PlayerMove=false
local PlayerLastMove=0
local PlayerLastStopMove=TMW.time
TMW_ST:AddEvent("PLAYER_STARTED_MOVING",function()PlayerMove=true PlayerLastMove=TMW.time end)
TMW_ST:AddEvent("PLAYER_STOPPED_MOVING",function()PlayerMove=false PlayerLastStopMove=TMW.time end)
local function StandingTime()
    return PlayerMove and 0 or (TMW.time-PlayerLastStopMove)
end

local _Wait=255

local function CheckSpecialTreatment(skillName)
    --skillName = Hekili SkillName format
    -- counter "playernothasquake" 1 mean not has quake affic
    --GetUnitSpeed("target")
    if IROSpecID==577 then -- DH Havoc
        if skillName=="eye_beam" then
            return ((COUNTERS["wantinterrupt"]==0)or(COUNTERS["intericon"]==0))and
            (COUNTERS["targethptimeremain"]>=8)and UnitCanAttack("player","target")and(IROVar.Range("target")<=8)
            and(COUNTERS["playernothasquake"]==1)and(StandingTime()>0.4)
        elseif skillName=="glaive_tempest" then
            --TMW.CNDT.Env.LibRangeCheck:GetRange("target")
            --/dump IsSpellInRange("Chaos Strike","target")
            return UnitCanAttack("player","target")and(IsSpellInRange("Chaos Strike","target")==1)and(GetUnitSpeed("target")==0)
        elseif skillName=="death_sweep" or skillName=="blade_dance" then
            return UnitCanAttack("player","target")and(IsSpellInRange("Chaos Strike","target")==1)
        elseif skillName=="immolation_aura" then
            return UnitCanAttack("player","target")and(IROVar.Range("target")<=5)
        elseif skillName=="metamorphosis" then
            return UnitCanAttack("player","target")and(IROVar.Range("target")<=5)
        elseif skillName=="essence_break" then
            return (COUNTERS["targethptimeremain"]>=8)and UnitCanAttack("player","target")and(IROVar.Range("target")<=5)
        end
    elseif IROSpecID==103 then -- Dud Feral
        if skillName=="tigers_fury" then
            return UnitCanAttack("player","target")and(IROVar.Range("target")<=8)
        elseif skillName=="algethar_puzzle_box" then
            return UnitCanAttack("player","target")and(IROVar.Range("target")<=8)and(StandingTime()>0.4)
        elseif (skillName=="incarnation")or(skillName=="berserk")then
            return UnitCanAttack("player","target")and(IROVar.Range("target")<=8)
        elseif skillName=="convoke_the_spirits" then
            return UnitCanAttack("player","target")and(IROVar.Range("target")<=8)
        end
    elseif IROSpecID==266 then -- Warlock Demo
        if skillName=="demonbolt" and COUNTERS["castingdb"]==1 then
            return _Wait
        end
    elseif IROSpecID==72 then -- War Fury
        if skillName=="whirlwind" and COUNTERS["justuseww"]==1 then
            return _Wait
        elseif skillName=="raging_blow" and COUNTERS["justuserb"]==1 then
            return _Wait
        end
    elseif IROSpecID==71 then -- War Arm
        if skillName=="rend" and COUNTERS["justuserend"]==1 then
            return _Wait
        elseif skillName=="slam" and COUNTERS["justuseslam"]==1 then
            return _Wait
        elseif skillName=="overpower" and COUNTERS["justuseoverpower"]==1 then
            return _Wait
        end
    elseif IROSpecID==254 then -- Hun MM
        if skillName=="multishot" and COUNTERS["justusemultishot"]==1 then
            return _Wait
        elseif skillName=="aimed_shot" and COUNTERS["justuseaimedshot"]==1 then
            return _Wait
        elseif skillName=="steady_shot" and COUNTERS["justusesteadyshot"]==1 then
            return _Wait
        elseif skillName=="arcane_shot" and COUNTERS["justusearcaneshot"]==1 then
            return _Wait
        end
    elseif IROSpecID==253 then -- Hun BM
        if skillName=="multishot" and COUNTERS["justusemultishot"]==1 then
            return _Wait
        end
    end
    return true
end

function IROVar.Hekili.UpdateToggleCounter()
    local cd=Hekili.DB.profile.toggles.cooldowns.value and 1 or 0
    local modevalue=Hekili.DB.profile.toggles.mode.value
    local mode=((modevalue=="automatic") and 1) or ((modevalue=="aoe") and 2) or 0
    local def=Hekili.DB.profile.toggles.defensives.value and 1 or 0
    TMW_ST:UpdateCounter("hekilicdstatus",cd)
    TMW_ST:UpdateCounter("hekilidefstatus",def)
    TMW_ST:UpdateCounter("hekilimodestatus",mode)
end
C_Timer.After(2,IROVar.Hekili.UpdateToggleCounter)

if not Hekili then
    print("need Addon Hekili Priority Helper to process!!!!!!!")
end

function IROVar.Hekili.CheckKeyEnable()
    for k,v in pairs(CounterToKey) do
        KeyEnable[v]=COUNTERS[k]==1
    end
end

local _OldKey=nil
local _CurrentKey=nil
local _ShouldUseOldKey=false
--local _ShouldUseOldKeyHandle=C_Timer.NewTimer(0.1,function() end)

local _OldSet=nil

local function DumpSetHekiliPrimary()
    local set={}
    for i=1,10 do
        local action=Hekili.DisplayPool.Primary.Buttons[i].Action
        if action then
            table.insert(set,action)
        else break end
    end
    return set
end

local function IsSameSet(a,b)
    if #a~=#b then return false end
    for i=1,#a do
        if a[i]~=b[i] then
            return false
        end
    end
    return true
end

function IROVar.Hekili.GetKeyBind()
    if _ShouldUseOldKey then
        if IsSameSet(_OldSet,DumpSetHekiliPrimary()) then
            return _OldKey
        else
            _ShouldUseOldKey=false
        end
    end
    local key=""
    for i=1,9 do
        if Hekili.DisplayPool.Primary.Buttons[i] then
            local CSTStatus=CheckSpecialTreatment(Hekili.DisplayPool.Primary.Buttons[i].Action)
            if CSTStatus then
                if CSTStatus==_Wait then return "" end
                local UseCD=COUNTERS["hekilicheckcd"]==1
                if UseCD then
                    local lastStart = Hekili.DisplayPool.Primary.Buttons[i].Cooldown.lastStart or 0
                    --Hekili.DisplayPool.Primary.Buttons[1].Cooldown.lastStart
                    --Hekili.DisplayPool.Primary.Buttons[1].Cooldown.lastDuration
                    --Hekili.DisplayPool.Primary.Buttons[i].unusable
                    local lastDuration= Hekili.DisplayPool.Primary.Buttons[i].Cooldown.lastDuration or 0
                    local CDready = (lastStart+lastDuration-TMW.time)<0.2
                    local usable = not Hekili.DisplayPool.Primary.Buttons[i].unusable
                    if CDready and usable then
                        key=Hekili.DisplayPool.Primary.Buttons[i].Keybinding:GetText()
                        if usedKey[key] and KeyEnable[key] then
                            return key
                        end
                    end
                else
                    key=Hekili.DisplayPool.Primary.Buttons[i].Keybinding:GetText()
                    if usedKey[key] and KeyEnable[key] then
                        return key
                    end
                end
            end
        end
    end
    return ""
end

TMW_ST:AddEvent("UNIT_SPELLCAST_START",function(event,unitToken)
    if unitToken=="player" then
        _ShouldUseOldKey=false
        _OldKey=_CurrentKey
    end
end)

TMW_ST:AddEvent("UNIT_SPELLCAST_INTERRUPTED",function(event,unitToken)
    if unitToken=="player" then
        _ShouldUseOldKey=true
        _OldSet=DumpSetHekiliPrimary()
    end
end)

TMW_ST:AddEvent("UNIT_SPELLCAST_SUCCEEDED",function(event,unitToken)
    if unitToken=="player" then
        _ShouldUseOldKey=false
    end
end)


C_Timer.NewTicker(0.05,function()
    local k=IROVar.Hekili.GetKeyBind()
    _CurrentKey=k
    IROVar.UpdateCounter("hekilikey",usedKey[k])
end)

local function cooldownsON()
    if not Hekili.DB.profile.toggles.cooldowns.value then
        Hekili:FireToggle("cooldowns")
        IROVar.Hekili.UpdateToggleCounter()
    end
end
local function cooldownsOFF()
    if Hekili.DB.profile.toggles.cooldowns.value then
        Hekili:FireToggle("cooldowns")
        IROVar.Hekili.UpdateToggleCounter()
    end
end
function IROVar.Hekili.CheckDPS()
    local t=IROVar.DPS.PredictTargetLifeTime()
    IROVar.UpdateCounter("targethptimeremain",t)
    IROVar.DPS.PredictTargetLifeTime()
    local c=COUNTERS["hekiliautocd"]
    if c>0 then
        if t==0 then cooldownsOFF() return end
        if not UnitCanAttack("player", "target") then cooldownsOFF() return end
        if t>=c then
            cooldownsON()
        else
            cooldownsOFF()
        end
    end
end

local CheckDPS=IROVar.Hekili.CheckDPS

IROVar.DPS.TickerHandle:Cancel()
IROVar.DPS.TickerHandle=C_Timer.NewTicker(0.8,CheckDPS)

IROVar.UnRegister_SPELL_UPDATE_COOLDOWN_scrip_CALLBACK("Target Life Time Remain")
IROVar.Register_PLAYER_TARGET_CHANGED_scrip_CALLBACK("IROVar.DPS CheckDPS",CheckDPS)
--Hekili.DB.profile.toggles.cooldowns.value==true
--UnitCanAttack("player", "target")
--IROVar.Register_PLAYER_TARGET_CHANGED_scrip_CALLBACK(name,callBack)

function IROVar.Hekili.CheckNextSkill(s1,counterName)
    local s2=Hekili.DisplayPool.Primary.Recommendations[2].actionName
    local s1_SkillName=Hekili.State.action[s1].name
    if s1~=s2 and IsCurrentSpell(s1_SkillName)then
        IROVar.DelayCT(counterName,IROVar.HasteFactor*1.2)
    end
end

local function Check1stSpellIsOffGCD()
    local GCDon = TMW.GCD>0
    local firstAction = Hekili.DisplayPool.Primary.Recommendations[1].actionName
    if Hekili.State.action[firstAction] then
        local firstSkillName = Hekili.State.action[firstAction].name
        local SkillCD = GetSpellCooldown(firstSkillName)
        local SkillOffGCD = SkillCD==0
        local OffGCD = GCDon and SkillOffGCD and 1 or 0
        IROVar.UpdateCounter("hekilioffgcd",OffGCD)
    end
end

C_Timer.NewTicker(0.1,Check1stSpellIsOffGCD)

local function SaveOptionToVar()
    local Options=TellMeWhenDB.ERODPSHekiliOptions[realmName][playerName]
    local function SaveCounter(a)
        Options[a]=COUNTERS[a]
    end
    for i=97,120 do -- Keep Counter "a" - "x"
        local counterName=string.char(i)
        SaveCounter(counterName)
    end
    local saveName = {
        "needusehealskill",
        "wantinterrupt",
        "interlevel",
        "wanthealthstone",
        "wanthealthpotion",
        "hekiliautocd",
        "needusecleanenrage",
        --"hekilicdstatus"
    }
    for _,v in pairs(saveName) do
        SaveCounter(v)
    end
end

local Loaded = false

C_Timer.NewTicker(3,function()
    if not Loaded or InCombatLockdown() then return end
    SaveOptionToVar()
end)


local function LoadOptionFromVar()
    if not COUNTERS["justrunonce"] or COUNTERS["justrunonce"]==0 then
        C_Timer.After(2,LoadOptionFromVar)
        return
    end
    Loaded=true
    local Options=TellMeWhenDB.ERODPSHekiliOptions[realmName][playerName]
    local function LoadCounter(a)
        if Options[a] and type(Options[a])=="number" then
            TMW_ST:UpdateCounter(a,Options[a])
        end
    end
    for i=97,120 do -- Keep Counter "a" - "x"
        local counterName=string.char(i)
        LoadCounter(counterName)
    end
    IROVar.Hekili.CheckKeyEnable()
    local saveName = {
        "needusehealskill",
        "wantinterrupt",
        "interlevel",
        "wanthealthstone",
        "wanthealthpotion",
        "hekiliautocd",
        "needusecleanenrage",
        --"hekilicdstatus",
    }
    for _,v in pairs(saveName) do
        LoadCounter(v)
    end
    IROVar.Hekili.CheckDPS()
end

C_Timer.After(2,LoadOptionFromVar) -- load after login,

local function CheckDragonfireBombDispenser()
    local id=408671
    --GetSpellCharges(408671)
    local currentCharges, maxCharges, cooldownStart, cooldownDuration, chargeModRate = GetSpellCharges(id)
    local FullCharge=currentCharges==3
    if FullCharge then return true end
    local nextChargeTime=cooldownStart+cooldownDuration
    local nearylFullCharge=currentCharges==2 and (nextChargeTime-TMW.time<5 or (select(3,AuraUtil.FindAuraByName("Flash of Inspiration", "player"))or 0)>=58)
    if nearylFullCharge then return true end
    local dieTime=COUNTERS["targethptimeremain"]
    local state=Hekili.State
    if state.boss and (currentCharges>=2 or (dieTime<=20 and dieTime>=8)) then return true end
    if state.active_enemies >=3 and dieTime<=7 and dieTime>=1 then return true end
    return false
end

if Hekili then
    Hekili.State.CheckDragonfireBombDispenser=CheckDragonfireBombDispenser
else
    C_Timer.After(5,function() Hekili.State.CheckDragonfireBombDispenser=CheckDragonfireBombDispenser end)
end