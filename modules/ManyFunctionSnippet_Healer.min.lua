-- Many Function Version Healer 9.0.5/1
if not IROVar then IROVar={}end;if not IROVar.Healer then IROVar.Healer={}end;IROVar.Healer.CleanType={}IROVar.Healer.CleanType[71]={0,0,0,0,''}IROVar.Healer.CleanType[72]={0,0,0,0,''}IROVar.Healer.CleanType[73]={0,0,0,0,''}IROVar.Healer.CleanType[265]={20,0,0,0,'Singe Magic'}IROVar.Healer.CleanType[266]={20,0,0,0,'Singe Magic'}IROVar.Healer.CleanType[267]={20,0,0,0,'Singe Magic'}IROVar.Healer.CleanType[262]={0,0,0,20,'Cleanse Spirit'}IROVar.Healer.CleanType[263]={0,0,0,20,'Cleanse Spirit'}IROVar.Healer.CleanType[264]={20,0,0,20,'Purify Spirit'}IROVar.Healer.CleanType[259]={0,0,0,0,''}IROVar.Healer.CleanType[260]={0,0,0,0,''}IROVar.Healer.CleanType[261]={0,0,0,0,''}IROVar.Healer.CleanType[256]={20,20,0,0,'Purify'}IROVar.Healer.CleanType[257]={20,20,0,0,'Purify'}IROVar.Healer.CleanType[258]={0,20,0,0,'Purify Disease'}IROVar.Healer.CleanType[65]={20,20,20,0,'Cleanse'}IROVar.Healer.CleanType[66]={0,20,20,0,'Cleanse Toxins'}IROVar.Healer.CleanType[70]={0,20,20,0,'Cleanse Toxins'}IROVar.Healer.CleanType[268]={0,20,20,0,'Detox'}IROVar.Healer.CleanType[270]={20,20,20,0,'Detox'}IROVar.Healer.CleanType[269]={0,20,20,0,'Detox'}IROVar.Healer.CleanType[62]={0,0,0,20,'Remove Curse'}IROVar.Healer.CleanType[63]={0,0,0,20,'Remove Curse'}IROVar.Healer.CleanType[64]={0,0,0,20,'Remove Curse'}IROVar.Healer.CleanType[253]={0,0,0,0,''}IROVar.Healer.CleanType[254]={0,0,0,0,''}IROVar.Healer.CleanType[255]={0,0,0,0,''}IROVar.Healer.CleanType[102]={0,0,20,20,'Remove Corruption'}IROVar.Healer.CleanType[103]={0,0,20,20,'Remove Corruption'}IROVar.Healer.CleanType[104]={0,0,20,20,'Remove Corruption'}IROVar.Healer.CleanType[105]={20,0,20,20,"Nature's Cure"}IROVar.Healer.CleanType[577]={0,0,0,0,''}IROVar.Healer.CleanType[581]={0,0,0,0,''}IROVar.Healer.CleanType[250]={0,0,0,0,''}IROVar.Healer.CleanType[251]={0,0,0,0,''}IROVar.Healer.CleanType[252]={0,0,0,0,''}function IROVar.Healer.UnitToIROCode(a)if not a then return"ff000000"end;local b=IROVar.Healer.UnitToIRO[a]if not b then return"ff000000"end;return b end;function IROVar.Healer.GetMyCleanType()if not IROSpecID then IROSpecID=GetSpecializationInfo(GetSpecialization())end;if not IROSpecID then return 0,0,0,0,''end;local c,d,e,f,g;if IROVar.Healer.CleanType[IROSpecID]then c=IROVar.Healer.CleanType[IROSpecID][1]d=IROVar.Healer.CleanType[IROSpecID][2]e=IROVar.Healer.CleanType[IROSpecID][3]f=IROVar.Healer.CleanType[IROSpecID][4]g=IROVar.Healer.CleanType[IROSpecID][5]else c=0;d=0;e=0;f=0;g=''end;return c,d,e,f,g end;function IROVar.Healer.CheckDebuffAuraType(a)local h=false;local i=false;local j=false;local k=false;local l,m;for n=1,40 do l,_,_,m=UnitAura(a,n,"HARMFUL")if not l then break end;if m=="Magic"then h=true end;if m=="Disease"then i=true end;if m=="Poison"then j=true end;if m=="Curse"then k=true end end;return h,i,j,k end;function IROVar.Healer.predictHPremain(a,h,i,j,k)local c,d,e,f=IROVar.Healer.CheckDebuffAuraType(a)h=(h or 0)*(c and 1 or 0)i=(i or 0)*(d and 1 or 0)j=(j or 0)*(e and 1 or 0)k=(k or 0)*(f and 1 or 0)local o=UnitHealthMax(a)/100;if o==0 then return 50000 end;local p=(UnitGetIncomingHeals(a)or 0)/(o*2)local q=UnitGetTotalAbsorbs(a)/o;local r=UnitGetTotalHealAbsorbs(a)/o;local s=UnitHealth(a)/o;local t=0;local u=math.max(h,i,j,k)s=s+q;if s>60 then s=s+20 end;if s>80 then s=s+20 end;if UnitGroupRolesAssigned(a)=="TANK"then return s+p-r-u-t-1 else return s+p-r-u-t end end;function IROVar.Healer.percentHP(a)return UnitHealth(a)/UnitHealthMax(a)*100 end;function IROVar.Healer.nPlayerRole(v)local w;local x;if IsInRaid()then x=0;for n=1,30 do w="raid"..n;if UnitExists(w)then x=x+(UnitGroupRolesAssigned(w)==v and 1 or 0)else break end end elseif IsInGroup()then x=UnitGroupRolesAssigned("player")==v and 1 or 0;for n=1,4 do w="party"..n;if UnitExists(w)then x=x+(UnitGroupRolesAssigned(w)==v and 1 or 0)else break end end else return UnitGroupRolesAssigned("player")==v and 1 or 0 end;return x>=1 and x or 1 end;IROVar.Healer.NumHealer=IROVar.Healer.nPlayerRole("HEALER")or 1;function IROVar.Healer.OnEvent()IROVar.Healer.NumHealer=IROVar.Healer.nPlayerRole("HEALER")end;IROVar.Healer.f=CreateFrame("Frame")IROVar.Healer.f:RegisterEvent("PLAYER_REGEN_DISABLED")IROVar.Healer.f:SetScript("OnEvent",IROVar.Healer.OnEvent)function IROVar.Healer.nPlayerHP(y)local w;local x;if IsInRaid()then x=0;for n=1,30 do w="raid"..n;if UnitExists(w)then if not UnitIsDead(w)then x=x+(IROVar.Healer.percentHP(w)<=y and 1 or 0)end else break end end elseif IsInGroup()then x=IROVar.Healer.percentHP("player")<=y and 1 or 0;for n=1,4 do w="party"..n;if UnitExists(w)then if not UnitIsDead(w)then x=x+(IROVar.Healer.percentHP(w)<=y and 1 or 0)end else break end end else return IROVar.Healer.percentHP("player")<=y and 1 or 0 end;return x end;function IROVar.Healer.FindLowestHP()if UnitIsDead("player")then return"player"end;local a="player"local z=IROVar.Healer.predictHPremain(a)local function A(B)if UnitExists(B)and not UnitIsDead(B)and UnitInRange(B)then local C=IROVar.Healer.predictHPremain(B)if C<z then z=C;a=B end end end;if IsInRaid()then for n=1,30 do A("raid"..n)end elseif IsInGroup()then for n=1,4 do A("party"..n)end end;return a,z end;function IROVar.Healer.GroupHPPercent()local D,E,F;if IsInRaid()then E=0;F=0;for n=1,40 do D="raid"..n;if UnitExists(D)then if not UnitIsDead(D)and UnitInRange(D)then E=E+UnitHealth(D)F=F+UnitHealthMax(D)end else break end end else E=UnitHealth("player")F=UnitHealthMax("player")for n=1,4 do D="party"..n;if UnitExists(D)and not UnitIsDead(D)and UnitInRange(D)then E=E+UnitHealth(D)F=F+UnitHealthMax(D)end end end;return E/F*100 end