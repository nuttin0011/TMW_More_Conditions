-- Many Function Version 9.0.5/80b
-- Set Priority to 1
local TMW=TMW;if not IROVar then IROVar={}end;IROVar.IROEnemyGroupVVHPRunTick=0.5;IROVar.TickCount01_Tick=0.17;IROVar.CastBarCheck_Tick=0.41;IROVar.Icon={}function IROVar.IsIconShow(a)return a and a.attributes.shown and not a:Update()and a.attributes.realAlpha>0 end;local GetTime=GetTime;local GetSpellCooldown=GetSpellCooldown;IROVar.playerGUID=UnitGUID("player")IROVar.DebugMode=false;IROVar.InterruptSpell=nil;IROVar.SkillCheckDPSRange=nil;IROVar.InstanceName=GetInstanceInfo()IROVar.activeConduits={}IROVar.EditKeyMacroForAutoTarget=50;IROVar.PLAYER_TARGET_CHANGED_Time=GetTime()IROVar.CCDebuff={}for b,c in ipairs(TMW.BE.debuffs.CrowdControl)do IROVar.CCDebuff[c]=true end;function IROVar.IsUnitCCed(d)if not UnitExists(d)then return false end;local e=false;for f=1,40 do local g,_,_,_,_,_,_,_,_,h=UnitAura(d,f,"HARMFUL")if g then if IROVar.CCDebuff[h]or IROVar.CCDebuff[g]then e=true;break end else break end end;return e end;function IROVar.CounterSetUpdate(i)for b,c in pairs(i)do TMW_ST:UpdateCounter(b,c)end end;local j=C_Timer.NewTimer(0.1,function()end)function IROVar.DelayCT(k,l)TMW_ST:UpdateCounter(k,1)j:Cancel()do local m=k;j=C_Timer.NewTimer(l,function()TMW_ST:UpdateCounter(m,0)end)end end;function IROVar.CalculateHaste()IROVar.Haste=UnitSpellHaste("player")IROVar.HasteFactor=100/(100+IROVar.Haste)IROVar.CastTime2sec=2*IROVar.HasteFactor;IROVar.CastTime2_25sec=2.25*IROVar.HasteFactor;IROVar.CastTime1_5sec=1.5*IROVar.HasteFactor;IROVar.CastTime6sec=6*IROVar.HasteFactor;IROVar.CastTime0_5sec=0.5*IROVar.HasteFactor end;IROVar.CalculateHaste()C_Timer.After(2,IROVar.CalculateHaste)if not IROSpecID then IROSpecID=GetSpecializationInfo(GetSpecialization())end;IROInterruptTier={}for b,c in pairs(IROUsedSkillControl.ClassType)do IROInterruptTier[b]=c end;IROVar.fhaste=CreateFrame("Frame")IROVar.fhaste:RegisterEvent("UNIT_SPELL_HASTE")IROVar.fhaste:SetScript("OnEvent",function(self,n,o)if n=="UNIT_SPELL_HASTE"and o=="player"then IROVar.CalculateHaste()end end)function IROVar.Debug()IROVar.DebugMode=not IROVar.DebugMode;print("IROVar.DebugMode : "..(IROVar.DebugMode and"On"or"Off"))end;IROVar.fspecOnEventCallBack={}function IROVar.fspecOnEvent(n)if IROVar.DebugMode then print("Event : "..(n~=nil and n or"nil"))end;IROVar.UpdateVar()C_Timer.After(5,IROVar.UpdateVar)for _,c in ipairs(IROVar.fspecOnEventCallBack)do c[2]()end end;function IROVar.Register_TALENT_CHANGE_scrip_CALLBACK(g,p)table.insert(IROVar.fspecOnEventCallBack,{g,p})end;IROVar.fspec=CreateFrame("Frame")IROVar.fspec:RegisterEvent("ACTIVE_PLAYER_SPECIALIZATION_CHANGED")IROVar.fspec:RegisterEvent("PLAYER_TALENT_UPDATE")IROVar.fspec:RegisterEvent("TRAIT_CONFIG_UPDATED")IROVar.fspec:RegisterEvent("ACTIVE_TALENT_GROUP_CHANGED")IROVar.fspec:SetScript("OnEvent",IROVar.fspecOnEvent)function IROVar.UpdateVar()IROVar.InstanceName=GetInstanceInfo()local q=GetSpecializationInfo(GetSpecialization())if IROVar.DebugMode then if IROSpecID~=q and q~=nil then print("old Spec :"..(IROSpecID~=nil and IROSpecID or"nil"))print("new Spec :"..(q~=nil and q or"nil"))end end;IROSpecID=q or IROSpecID;if IROInterruptTier[IROSpecID]then IROVar.InterruptSpell=IROInterruptTier[IROSpecID][2]IROVar.SkillCheckDPSRange=IROInterruptTier[IROSpecID][3]else IROVar.InterruptSpell=nil;IROVar.SkillCheckDPSRange=nil end end;IROVar.UpdateVar()C_Timer.After(5,IROVar.UpdateVar)IROVar.CheckDPSRange=function(r)if IROVar.SkillCheckDPSRange==nil then return true end;r=r or"target"return IsSpellInRange(IROVar.SkillCheckDPSRange,r)==1 end;IROVar.ERO_Old_Val={Timer=0,Old_Val={},Check=function(s,t)t=t or""return IROVar.ERO_Old_Val.Timer==IROVar.TickCount01 and IROVar.ERO_Old_Val.Old_Val[s]and IROVar.ERO_Old_Val.Old_Val[s][t]and IROVar.ERO_Old_Val.Old_Val[s][t]or nil end,Update=function(s,t,u)t=t or""local v=IROVar.TickCount01;if IROVar.ERO_Old_Val.Timer<v then IROVar.ERO_Old_Val.Timer=v;IROVar.ERO_Old_Val.Old_Val={}end;if not IROVar.ERO_Old_Val.Old_Val[s]then IROVar.ERO_Old_Val.Old_Val[s]={}end;IROVar.ERO_Old_Val.Old_Val[s][t]=u end}local w={[2]=37727,[3]=42732,[4]=129055,[5]=8149,[7]=61323,[8]=34368,[10]=32321,[15]=33069,[20]=10645,[25]=24268,[30]=835,[35]=24269,[38]=140786,[40]=28767,[45]=23836,[50]=116139,[55]=74637,[60]=32825,[70]=41265,[80]=35278,[90]=133925,[100]=33119,[150]=46954,[200]=75208}local x={}for b,c in pairs(w)do x[b]="item:"..c end;local y={}for f=1,200 do if w[f]then table.insert(y,f)end end;IROVar.ItemNameToCheck8="item:34368"function IROVar.Range(d)for f=1,#y do if IsItemInRange(x[y[f]],d)then return y[f-1]or 0 end end;return 300 end;function IROEnemyCountInRange(z)z=z or 8;local A=IROVar.ERO_Old_Val.Check("IROEnemyCountInRange",z)if A then return A end;if z<2 then z=2 end;while w[z]==nil do z=z-1 end;local B=x[z]local C;local D=0;for f=1,30 do C='nameplate'..f;if UnitExists(C)and UnitCanAttack("player",C)then if IsItemInRange(B,C)and(UnitAffectingCombat(C)or z<=8 or IsItemInRange(IROVar.ItemNameToCheck8,C))then D=D+1 end end;if D>=8 then break end end;IROVar.ERO_Old_Val.Update("IROEnemyCountInRange",z,D)return D end;function PercentCastbar2(E,F,d,G,H)E=E or 0.5;if F==nil then F=true end;H=H or 2000;G=G or 200;d=d or"target"local _,_,_,I,J,_,_,K=UnitCastingInfo(d)local L=false;local M;local N;local O;if I~=nil and not(K and F)then M=J-I;N=GetTime()*1000-I;if M-N>=G and M-N<=H then O=N/M;L=O>=E end;return L end;local _,_,_,P,Q,_,R=UnitChannelInfo(d)if P~=nil and not(R and F)then M=Q-P;N=GetTime()*1000-P;if N>=G and N<=M-G then L=true end end;return L end;function GCDActiveLessThan(S)S=S or 0.2;local T,U=GetSpellCooldown(TMW.GCDSpell)return T+U-GetTime()<S end;function SumPartyHP()local V=IROVar.ERO_Old_Val.Check("SumPartyHP","")if V then return V end;local W=0;if IsInRaid()then local X=GetNumGroupMembers()if X==0 then X=1 end;for f=1,X do W=W+UnitHealth("raid"..f)end elseif IsInGroup()then W=UnitHealth("player")local X=GetNumGroupMembers()for f=1,X-1 do W=W+UnitHealth("party"..f)end else W=UnitHealth("player")end;IROVar.ERO_Old_Val.Update("SumPartyHP","",W)return W end;IROVar.ignoreName={["Spiteful Shade"]=true,["Slithering Ooze"]=true}function SumHPMobinCombat()local V=IROVar.ERO_Old_Val.Check("SumHPMobinCombat","")if V then return V end;local Y=0;local C;for Z=1,30 do C='nameplate'..Z;if UnitExists(C)and not IROVar.ignoreName[UnitName(C)]and UnitCanAttack("player",C)and(UnitAffectingCombat(C)or IsItemInRange(IROVar.ItemNameToCheck8,C))then Y=Y+UnitHealth(C)end end;IROVar.ERO_Old_Val.Update("SumHPMobinCombat","",Y)return Y end;function SumHPMobin8yd()local Y=0;local C;for Z=1,30 do C='nameplate'..Z;if UnitExists(C)and CheckInteractDistance(C,2)and UnitCanAttack("player",C)then Y=Y+UnitHealth(C)end end;return Y end;function IROTargetVVHP(a0,d)d=d or"target"a0=a0 or 2;local a1=SumPartyHP()local a2=UnitHealth(d)return a0*a1<a2 end;IROVar.IROEnemyGroupVVHPOldVal={}IROVar.IROEnemyGroupVVHPRun=false;function IROEnemyGroupVVHP(a0)IROVar.IROEnemyGroupVVHPRun=true;a0=a0 or 3;if IROVar.IROEnemyGroupVVHPOldVal[a0]then IROVar.IROEnemyGroupVVHPRun=false;return IROVar.IROEnemyGroupVVHPOldVal[a0]end;local a1=SumPartyHP()local a3=SumHPMobinCombat()local a4=a0*a1<a3;IROVar.IROEnemyGroupVVHPOldVal[a0]=a4;IROVar.IROEnemyGroupVVHPRun=false;return a4 end;C_Timer.NewTicker(IROVar.IROEnemyGroupVVHPRunTick,function()if not IROVar.IROEnemyGroupVVHPRun and next(IROVar.IROEnemyGroupVVHPOldVal)then IROVar.IROEnemyGroupVVHPOldVal={}end end)local a5={[259]=true,[260]=true,[261]=true,[269]=true,[103]=true}IROVar.GCDCDTimeOldHaste=0;IROVar.GCDCDTimeOldGCD=0;function GCDCDTime()local A=IROVar.ERO_Old_Val.Check("GCDCDTime","")if A then return A end;local a6=TMW.GCD;if a6==0 then if not IROSpecID then IROSpecID=GetSpecializationInfo(GetSpecialization())end;if a5[IROSpecID]then a6=1 else if IROVar.GCDCDTimeOldHaste~=IROVar.Haste then a6=1.5*100/(100+IROVar.Haste)IROVar.GCDCDTimeOldHaste=IROVar.Haste;IROVar.GCDCDTimeOldGCD=a6 else a6=IROVar.GCDCDTimeOldGCD end end end;IROVar.ERO_Old_Val.Update("GCDCDTime","",a6)return a6 end;IROVar.temp_allDeBuffByMe={[1]=0,[2]={}}function IROVar.allDeBuffByMe(d)local a7={}local a8=UnitGUID(d)if not a8 then return a7 end;local a9=GetTime()if IROVar.temp_allDeBuffByMe[1]==a9 and IROVar.temp_allDeBuffByMe[2][a8]then return IROVar.temp_allDeBuffByMe[2][a8]end;if IROVar.temp_allDeBuffByMe[1]<a9 then IROVar.temp_allDeBuffByMe[1]=a9;IROVar.temp_allDeBuffByMe[2]={}end;local aa,ab;for f=1,400 do aa,_,_,_,_,ab=UnitAura(d,f,"PLAYER|HARMFUL")if aa then a7[aa]=ab-GetTime()else break end end;IROVar.temp_allDeBuffByMe[2][a8]=a7;return a7 end;IROVar.temp_allBuffByMe={[1]=0,[2]={}}function IROVar.allBuffByMe(d,ac)local ad={}local a8=UnitGUID(d)if not a8 then return ad end;local a9=GetTime()if IROVar.temp_allBuffByMe[1]==a9 and IROVar.temp_allBuffByMe[2][a8]then return IROVar.temp_allBuffByMe[2][a8]end;if IROVar.temp_allBuffByMe[1]<a9 then IROVar.temp_allBuffByMe[1]=a9;IROVar.temp_allBuffByMe[2]={}end;local ae,ab;if ac then for f=1,400 do ae,_,_,_,_,ab=UnitAura(d,f,"PLAYER|HELPFUL")if ae then ad[string.lower(ae)]=ab-GetTime()else break end end else for f=1,400 do ae,_,_,_,_,ab=UnitAura(d,f,"PLAYER|HELPFUL")if ae then ad[ae]=ab-GetTime()else break end end end;IROVar.temp_allBuffByMe[2][a8]=ad;return ad end;function IROVar.IconSweepCompair(a,af,ag)if not a then return true end;if ag<=0 and a.Modules.IconModule_CooldownSweep.start==0 then return true end;local ah=a.Modules.IconModule_CooldownSweep.start+a.Modules.IconModule_CooldownSweep.duration;local ai=ah-af;local aj=ah-ag;local ak=GetTime()return ak>ai and ak<aj end;function IROVar.IconSweepRemain(a)if not a then return 0,1 end;if a.Modules.IconModule_CooldownSweep.start==0 then return 0,1 end;local al=a.Modules.IconModule_CooldownSweep.duration;local am=a.Modules.IconModule_CooldownSweep.start+al-GetTime()return am,al end;function IROVar.DetermineActiveCovenantAndSoulbindAndConduits()local an=C_Covenants.GetActiveCovenantID()if not an or an==0 then return nil end;local ao=C_Covenants.GetCovenantData(an)if not ao then return nil end;local ap=ao.name;local aq=C_Soulbinds.GetActiveSoulbindID()if not aq or aq==0 then return nil end;local ar=C_Soulbinds.GetSoulbindData(aq)if not ar then return nil end;local as=ar["ID"]local at=ar["name"]local au=ar["description"]local av=ar["tree"]local aw=av["nodes"]local ax={}ax.covenantName=ap;ax.soulbindName=at;ax.conduits={}for _,ay in pairs(aw)do local az=ay["ID"]local aA=ay.row;local aB=ay.column;local aC=ay.spellID;local aD=ay.conduitID;local aE=ay.conduitRank;local aF=ay.state;local aG=ay.conduitType;if aF==3 then local aH;if aC~=0 then aH=GetSpellInfo(aC)elseif aD~=0 then local aI=C_Soulbinds.GetConduitSpellID(aD,aE)aC=aI;aH=GetSpellInfo(aI)else aC=nil;aH=nil end;if aC then ax.conduits[#ax.conduits+1]={spellID=aC,spellName=aH}ax[aC]=true;ax[aH]=true end end end;return ax end;IROVar.justCheckActiveConduits=0;IROVar.fconduitOnEvent=function()local aJ=GetTime()if aJ<=IROVar.justCheckActiveConduits then return end;IROVar.justCheckActiveConduits=aJ+0.4;C_Timer.After(0.5,function()IROVar.activeConduits=IROVar.DetermineActiveCovenantAndSoulbindAndConduits()if not IROVar.activeConduits then IROVar.activeConduits={}end end)end;IROVar.fconduit=CreateFrame("Frame")IROVar.fconduit:RegisterEvent("COVENANT_CALLINGS_UPDATED")IROVar.fconduit:RegisterEvent("COVENANT_CHOSEN")IROVar.fconduit:RegisterEvent("SOULBIND_ACTIVATED")IROVar.fconduit:RegisterEvent("SOULBIND_PATH_CHANGED")IROVar.fconduit:RegisterEvent("SOULBIND_NODE_UPDATED")IROVar.fconduit:RegisterEvent("GARRISON_UPDATE")IROVar.fconduit:SetScript("OnEvent",IROVar.fconduitOnEvent)C_Timer.After(1,IROVar.fconduitOnEvent)IROVar.incombatCallBackRun={}IROVar.outcombatCallBackRun={}function IROVar.RegisterIncombatCallBackRun(g,aK)IROVar.incombatCallBackRun[g]=aK end;function IROVar.RegisterOutcombatCallBackRun(g,aK)IROVar.outcombatCallBackRun[g]=aK end;function IROVar.UnRegisterOutcombatCallBackRun(g)IROVar.outcombatCallBackRun[g]=nil end;function IROVar.UnRegisterIncombatCallBackRun(g)IROVar.incombatCallBackRun[g]=nil end;IROVar.incombat=UnitAffectingCombat("player")IROVar.incombatFrame=CreateFrame("Frame")IROVar.incombatFrame:RegisterEvent("PLAYER_REGEN_ENABLED")IROVar.incombatFrame:RegisterEvent("PLAYER_REGEN_DISABLED")IROVar.incombatFrame:SetScript("OnEvent",function(self,n)IROVar.incombat=n=="PLAYER_REGEN_DISABLED"if n=="PLAYER_REGEN_DISABLED"then for b,c in pairs(IROVar.incombatCallBackRun)do if c then c()end end else for b,c in pairs(IROVar.outcombatCallBackRun)do if c then c()end end end end)IROVar.COMBAT_LOG_EVENT_UNFILTERED_CALLBACK={}function IROVar.Register_COMBAT_LOG_EVENT_UNFILTERED_CALLBACK(g,aK)IROVar.COMBAT_LOG_EVENT_UNFILTERED_CALLBACK[g]=aK end;function IROVar.UnRegister_COMBAT_LOG_EVENT_UNFILTERED_CALLBACK(g)IROVar.COMBAT_LOG_EVENT_UNFILTERED_CALLBACK[g]=nil end;function IROVar.COMBAT_LOG_EVENT_UNFILTERED_scrip(...)for b,c in pairs(IROVar.COMBAT_LOG_EVENT_UNFILTERED_CALLBACK)do if c then c(...)end end end;IROVar.COMBAT_LOG_EVENT_UNFILTERED_frame=CreateFrame("Frame")IROVar.COMBAT_LOG_EVENT_UNFILTERED_frame:RegisterEvent("COMBAT_LOG_EVENT_UNFILTERED")IROVar.COMBAT_LOG_EVENT_UNFILTERED_frame:SetScript("OnEvent",function(self,n,...)IROVar.COMBAT_LOG_EVENT_UNFILTERED_scrip(CombatLogGetCurrentEventInfo())end)IROVar.PLAYER_TARGET_CHANGED_CALLBACK={}function IROVar.Register_PLAYER_TARGET_CHANGED_scrip_CALLBACK(g,aK)table.insert(IROVar.PLAYER_TARGET_CHANGED_CALLBACK,{g,aK})end;function IROVar.UnRegister_PLAYER_TARGET_CHANGED_scrip_CALLBACK(g)for b,c in ipairs(IROVar.PLAYER_TARGET_CHANGED_CALLBACK)do if c[1]==g then table.remove(IROVar.PLAYER_TARGET_CHANGED_CALLBACK,b)end end end;IROVar.PLAYER_TARGET_CHANGED_frame=CreateFrame("Frame")IROVar.PLAYER_TARGET_CHANGED_frame:RegisterEvent("PLAYER_TARGET_CHANGED")IROVar.PLAYER_TARGET_CHANGED_frame:SetScript("OnEvent",function()for _,c in ipairs(IROVar.PLAYER_TARGET_CHANGED_CALLBACK)do c[2]()end end)IROVar.SPELL_UPDATE_COOLDOWN_CALLBACK={}function IROVar.SPELL_UPDATE_COOLDOWN_scrip()local aL,al=GetSpellCooldown(TMW.GCDSpell)local aM=0;if aL then aM=aL+al end;for b,c in pairs(IROVar.SPELL_UPDATE_COOLDOWN_CALLBACK)do if c then c(aM)end end end;IROVar.SPELL_UPDATE_COOLDOWN_count=0;function IROVar.Register_SPELL_UPDATE_COOLDOWN_scrip_CALLBACK(g,aK)IROVar.SPELL_UPDATE_COOLDOWN_CALLBACK[g]=aK end;function IROVar.UnRegister_SPELL_UPDATE_COOLDOWN_scrip_CALLBACK(g)IROVar.SPELL_UPDATE_COOLDOWN_CALLBACK[g]=nil end;IROVar.SPELL_UPDATE_COOLDOWN_frame=CreateFrame("Frame")IROVar.SPELL_UPDATE_COOLDOWN_frame:RegisterEvent("SPELL_UPDATE_COOLDOWN")IROVar.SPELL_UPDATE_COOLDOWN_frame:RegisterEvent("SPELL_UPDATE_USABLE")IROVar.SPELL_UPDATE_COOLDOWN_frame:SetScript("OnEvent",function(self,n,...)IROVar.SPELL_UPDATE_COOLDOWN_count=IROVar.SPELL_UPDATE_COOLDOWN_count+1;IROVar.SPELL_UPDATE_COOLDOWN_scrip()end)IROVar.TickCount01=0;IROVar.TickCount01_Handle=C_Timer.NewTicker(IROVar.TickCount01_Tick,function()IROVar.TickCount01=IROVar.TickCount01+1 end)IROVar.CastBar={}IROVar.CastBar.Casting=nil;IROVar.CastBar.Channeling=nil;IROVar.CastBar.Calculated={}IROVar.CastBar.Spell=nil;IROVar.CastBar.SpellId=nil;IROVar.CastBar.CantKick=false;function IROVar.CastBar.CheckCasting()local aN={UnitCastingInfo("target")}if aN[1]then IROVar.CastBar.Casting=aN else IROVar.CastBar.Casting=nil end end;function IROVar.CastBar.CheckChanneling()local aN={UnitChannelInfo("target")}if aN[1]then IROVar.CastBar.Channeling=aN else IROVar.CastBar.Channeling=nil end end;function IROVar.CastBar.ResetKick()IROVar.CastBar.CantKick=false;IROVar.CastBar.Spell=nil;IROVar.CastBar.SpellId=nil;IROVar.CastBar.Calculated={}end;function IROVar.CastBar.CheckSpellInfo()local K=false;local aO=nil;local aP=nil;if IROVar.CastBar.Casting then K=IROVar.CastBar.Casting[8]aO=IROVar.CastBar.Casting[1]aP=IROVar.CastBar.Casting[9]elseif IROVar.CastBar.Channeling then K=IROVar.CastBar.Channeling[7]aO=IROVar.CastBar.Channeling[1]aP=IROVar.CastBar.Channeling[8]end;IROVar.CastBar.CantKick=K;IROVar.CastBar.Spell=aO;IROVar.CastBar.SpellId=aP end;function IROVar.CastBar.CalculateInterruptTimer(aQ)local aR=0.2;aQ=aQ or 0.6;local aS=0;local aT=0;if IROVar.CastBar.Casting then local aU=IROVar.CastBar.Casting[4]/1000;local aV=IROVar.CastBar.Casting[5]/1000;local aW=aV-aU;local aX=aW*aQ;aS=aX+aU;aT=aV-aR;if aT-aS<0.5 then aS=aT-0.5 end elseif IROVar.CastBar.Channeling then local aU=IROVar.CastBar.Channeling[4]/1000;local aV=IROVar.CastBar.Channeling[5]/1000;local aW=aV-aU;if aW>=1 then aS=aU+0.2;aT=aV-aR end end;IROVar.CastBar.Calculated[aQ]={aS,aT}end;IROVar.TargetChangeCount=0;IROVar.TargetName=UnitName("target")IROVar.TargetGUID=UnitGUID("target")IROVar.TargetLV=UnitLevel("target")function IROVar.CastBar.CheckAll()IROVar.CastBar.CheckCasting()IROVar.CastBar.CheckChanneling()IROVar.CastBar.ResetKick()IROVar.CastBar.CheckSpellInfo()end;IROVar.CastBar.CastFrame=CreateFrame("Frame")IROVar.CastBar.CastFrame:RegisterEvent("UNIT_SPELLCAST_START")IROVar.CastBar.CastFrame:RegisterEvent("UNIT_SPELLCAST_CHANNEL_START")IROVar.CastBar.CastFrame:RegisterEvent("PLAYER_TARGET_CHANGED")IROVar.CastBar.CastFrame:SetScript("OnEvent",function(self,n,aY,...)if n=="UNIT_SPELLCAST_START"and aY=="target"then IROVar.CastBar.Channeling=nil;IROVar.CastBar.CheckCasting()IROVar.CastBar.ResetKick()IROVar.CastBar.CheckSpellInfo()elseif n=="UNIT_SPELLCAST_CHANNEL_START"and aY=="target"then IROVar.CastBar.Casting=nil;IROVar.CastBar.CheckChanneling()IROVar.CastBar.ResetKick()IROVar.CastBar.CheckSpellInfo()elseif n=="PLAYER_TARGET_CHANGED"then IROVar.PLAYER_TARGET_CHANGED_Time=GetTime()IROVar.TargetChangeCount=IROVar.TargetChangeCount+1;IROVar.TargetName=UnitName("target")IROVar.TargetGUID=UnitGUID("target")IROVar.TargetLV=UnitLevel("target")IROVar.CastBar.CheckAll()end end)C_Timer.NewTicker(IROVar.CastBarCheck_Tick,IROVar.CastBar.CheckAll)IROVar.CastBar.CastFrame2=CreateFrame("Frame")IROVar.CastBar.CastFrame2:RegisterEvent("UNIT_SPELLCAST_FAILED_QUIET")IROVar.CastBar.CastFrame2:RegisterEvent("UNIT_SPELLCAST_CHANNEL_STOP")IROVar.CastBar.CastFrame2:RegisterEvent("UNIT_SPELLCAST_STOP")IROVar.CastBar.CastFrame2:SetScript("OnEvent",function(self,n,aY,...)if aY=="target"then IROVar.CastBar.Casting=nil;IROVar.CastBar.Channeling=nil;IROVar.CastBar.ResetKick()end end)function IROVar.TargetCastBar(aZ,a_,b0)if b0 and b0~=IROVar.CastBar.SpellId and b0~=IROVar.CastBar.Spell then return false end;aZ=aZ or 0.6;if not IROVar.CastBar.Calculated[aZ]then IROVar.CastBar.CalculateInterruptTimer(aZ)end;local b1=IROVar.CastBar.Calculated[aZ][1]local b2=IROVar.CastBar.Calculated[aZ][2]if not a_ and IROVar.CastBar.CantKick then return false end;local b3=GetTime()return b3>=b1 and b3<=b2 end;function IROVar.CompareTable(b4,b5)local function b6(b7,b8)if not b7 or not b8 then return false end;local b9=true;for b,c in pairs(b7)do if type(c)=="table"then b9=IROVar.CompareTable(c,b8[b])if not b9 then break end elseif b9 and c~=b8[b]then b9=false;break end end;return b9 end;local ba=b6(b4,b5)if ba then ba=b6(b5,b4)end;return ba end;IROInterruptTier.CDEnd=0;IROVar.Register_SPELL_UPDATE_COOLDOWN_scrip_CALLBACK("IsMyInterruptSpellReady",function(bb)local aL,al=GetSpellCooldown(IROVar.InterruptSpell)if aL then IROInterruptTier.CDEnd=aL+al else IROInterruptTier.CDEnd=0 end end)function IsMyInterruptSpellReady()if not IROVar.InterruptSpell then return false end;return IROInterruptTier.CDEnd<=GetTime()end;local bc={["MAGE"]=true,["SHAMAN"]=true,["DRUID"]=true}IROVar.decurseInGroup=0;function IROVar.DecurseCheck()local function bd(be)local _,bf=UnitClass(be)return bc[bf]end;local bg=0;if IsInRaid()then for f=1,40 do local X="raid"..f;if UnitExists(X)and bd(X)then bg=bg+1 end end elseif IsInGroup()then for f=1,4 do local X="party"..f;if UnitExists(X)and bd(X)then bg=bg+1 end end;if bd("player")then bg=bg+1 end else if bd("player")then bg=bg+1 end end;IROVar.decurseInGroup=bg end;IROVar.IsDecurseF=CreateFrame("Frame")IROVar.IsDecurseF:RegisterEvent("GROUP_ROSTER_UPDATE")IROVar.IsDecurseF:SetScript("OnEvent",function()IROVar.DecurseCheck()end)C_Timer.NewTicker(6,IROVar.DecurseCheck,10)function IROVar.DecurseInGroup()return IROVar.decurseInGroup end;function IROVar.UnitCount(X)return IROVar.AutoTarget and IROVar.AutoTarget.UnitCount[X]or 0 end;IROVar.KickPressed=false;function IROVar.KickPress()IROVar.KickPressed=true;C_Timer.After(0.4,function()IROVar.KickPressed=false end)end;function IROVar.UpdateCounter(X,c)if TMW.COUNTERS[X]~=c then TMW.COUNTERS[X]=c;TMW:Fire("TMW_COUNTER_MODIFIED",X)end end